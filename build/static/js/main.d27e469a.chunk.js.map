{"version":3,"sources":["Components/Welcome/index.jsx","Containters/CommmentCouter/index.jsx","Containters/Editor/index.jsx","Containters/EachBlog/index.jsx","Containters/AllBlogs/index.jsx","Containters/BlogAddition/index.jsx","Containters/CardCounter/index.jsx","login.jsx","App.js","serviceWorker.js","index.js"],"names":["Welcome","Fragment","className","Component","CommentCounter","props","state","NaN","this","setState","isLoading","axios","get","then","result","res","JSON","parse","stringify","data","notes","cardindex","Comments","length","catch","error","Modal","setAppElement","Editor","useState","modaIsOpen","setModalIsOpen","value","type","onClick","isOpen","onRequestClose","contentEditable","Title","Body","newbody","document","activeElement","parentElement","childNodes","innerHTML","newtitle","Axios","patch","_id","propName","headers","Authorization","token","console","log","alert","err","editfunction","API","EachBlog","handledelete","blogs","delete","index","id","Created","Updated","Likes","AllBlogs","returner","i","cards","push","key","BlogAddition","handleaddition","getElementById","Content","Image","post","count","htmlFor","placeholder","CardCounter","cardCounter","Login","loginhandler","enteredusername","enteredpassword","email","password","name","required","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d27e469a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Welcome\">\r\n          <p>Welcome Lokesh Bolisetty</p>\r\n          <p>Happy to see you again</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/\";\r\n/*import { render } from \"@testing-library/react\";*/\r\nclass CommentCounter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      CommentCounter: NaN,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .get(API)\r\n      .then((result) => {\r\n        var res = JSON.parse(JSON.stringify(result));\r\n        this.setState({\r\n          CommentCounter: res.data.notes[this.props.cardindex].Comments.length,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <a className=\"btn btn-danger mx-4 my-0.5\">\r\n          {this.state.CommentCounter} Comments\r\n        </a>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentCounter;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Axios from \"axios\";\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/\";\r\n\r\nModal.setAppElement(\"#root\");\r\nfunction Editor(props) {\r\n  const [modaIsOpen, setModalIsOpen] = useState(false);\r\n  const [bodycontent, setbodycontent] = useState(props.data.value);\r\n  const editfunction = () => {\r\n    let newbody = document.activeElement.parentElement.childNodes[1].innerHTML;\r\n    let newtitle = document.activeElement.parentElement.childNodes[0].innerHTML;\r\n    Axios.patch(\r\n      API + props.data._id,\r\n\r\n      [\r\n        {\r\n          propName: \"Body\",\r\n          value: newbody,\r\n        },\r\n        {\r\n          propName: \"Title\",\r\n          value: newtitle,\r\n        },\r\n      ],\r\n      { headers: { Authorization: \"Bearer \" + props.token } }\r\n    )\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert(\"Updated successfully. Refresh to see the changes.\");\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Sorry! Was not able to edit\");\r\n        console.log(err);\r\n      });\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Editor\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary\"\r\n        onClick={() => setModalIsOpen(true)}\r\n      >\r\n        Edit\r\n      </button>\r\n      <Modal isOpen={modaIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n        <h3 contentEditable=\"true\">{props.data.Title}</h3>\r\n        <h5 contentEditable=\"true\">{props.data.Body}</h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            editfunction();\r\n          }}\r\n        >\r\n          Edit Content\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport CommentCounter from \"../CommmentCouter/index\";\r\nimport EditModal from \"../Editor\";\r\n\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/\";\r\n\r\nclass EachBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      blogs: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .get(API)\r\n      .then((result) => {\r\n        var res = JSON.parse(JSON.stringify(result));\r\n        //   console.log(res);\r\n        //   console.log(res.data.notes[this.props.index]);\r\n        this.setState({\r\n          blogs: res.data.notes[this.props.index],\r\n          isLoading: false,\r\n        });\r\n        //  console.log(res);\r\n      })\r\n      .catch((error) =>\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n        })\r\n      );\r\n  }\r\n  handledelete = () => {\r\n    console.log(this.state.blogs._id);\r\n    axios\r\n      .delete(API + this.state.blogs._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"Deleted Successfully\");\r\n    /*document.getElementById(\"Title\").innerHTML = `Deleted succesfully`;\r\n    /*alert(Title.value);\r\n    alert(\"Blog deted succesfully. Refresh the page to see changes.\");*/\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          {/*<img\r\n            className=\"card-img-top\"\r\n            src={this.state.blogs.Image}\r\n            alt=\"Blog pic\"\r\n            loading=\"lazy\"\r\n          />*/}\r\n          <div className=\"card-body my-2\">\r\n            <h1 id=\"Title\">{this.state.blogs.Title}</h1>\r\n            <p>Created on {this.state.blogs.Created}</p>\r\n            <p>Last modified on {this.state.blogs.Updated}</p>\r\n            <a className=\"btn btn-primary mx-4 my-2\">\r\n              {this.state.blogs.Likes} Likes\r\n            </a>\r\n            <CommentCounter cardindex={this.props.index} />\r\n            <a\r\n              className=\"btn btn-primary mx-4 my-2\"\r\n              onClick={this.handledelete}\r\n            >\r\n              Delete\r\n            </a>\r\n            {/*<button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={<EditModal data={this.state.blogs} />}\r\n            >\r\n              Edit\r\n            </button>*/}\r\n            <EditModal data={this.state.blogs} token={this.props.token} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachBlog;\r\n","import React, { Component } from \"react\";\r\n/*import axios from \"axios\";*/\r\nimport \"./style.css\";\r\nimport EachBlog from \"../EachBlog\";\r\n/*import { render } from \"@testing-library/react\";*/\r\nclass AllBlogs extends Component {\r\n  render() {\r\n    var returner = [];\r\n\r\n    for (let i = 0; i < this.props.cards; i++) {\r\n      returner.push(<EachBlog index={i} key={i} token={this.props.token} />);\r\n    }\r\n    return <div>{returner}</div>;\r\n  }\r\n}\r\n\r\nexport default AllBlogs;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/\";\r\n\r\nclass BlogAddition extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .get(API)\r\n      .then((result) => {\r\n        var res = JSON.parse(JSON.stringify(result));\r\n        //        console.log(res);\r\n        this.setState({\r\n          count: res.data.count,\r\n          isLoading: false,\r\n        });\r\n        //console.log(res);\r\n      })\r\n      .catch((error) =>\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n        })\r\n      );\r\n  }\r\n  handleaddition = () => {\r\n    let Title = document.getElementById(\"Header\");\r\n    let Content = document.getElementById(\"Content\");\r\n    let Image = document.getElementById(\"Image\");\r\n    axios\r\n      .post(\r\n        API,\r\n        {\r\n          Title: document.getElementById(\"Header\").value,\r\n          Body: Content.value,\r\n          Image: Image.value,\r\n        },\r\n        { headers: { Authorization: \"Bearer \" + this.props.token } }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert(\"Blog posted successfully. Refresh to see the changes.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Blog has not been posted. Try logging out and logging in again\");\r\n      });\r\n    //alert(Title.value);\r\n    //alert(Content.value);\r\n\r\n    Title.value = \"\";\r\n    Content.value = \"\";\r\n    Image.value = \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h3>Add a blog</h3>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Header\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Header\"\r\n              placeholder=\"Enter the Title of the blog\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Content\">Content</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Content\"\r\n              placeholder=\"Enter the content of the blog\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"Image\">Image</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"Image\"\r\n              placeholder=\"Enter the url of an image you want to feature\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm\"\r\n          onClick={this.handleaddition}\r\n          id=\"addtxt\"\r\n        >\r\n          Add <span className=\"badge badge-light\">{this.state.count}</span>\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogAddition;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AllBlogs from \"../AllBlogs/index\";\r\nimport \"./style.css\";\r\nimport BlogAddition from \"../BlogAddition\";\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/\";\r\n/*import { render } from \"@testing-library/react\";*/\r\nclass CardCounter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cardCounter: NaN,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .get(API)\r\n      .then((result) => {\r\n        var res = JSON.parse(JSON.stringify(result));\r\n        //console.log(res);\r\n        //console.log(res.data.count);\r\n        this.setState({\r\n          cardCounter: res.data.count,\r\n          isLoading: false,\r\n        });\r\n        //console.log(res);\r\n      })\r\n      .catch((error) =>\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"text\">\r\n            <h1>Your Blogs</h1>\r\n          </div>\r\n          <div className=\"Cards\">\r\n            <AllBlogs cards={this.state.cardCounter} token={this.props.token} />\r\n          </div>\r\n          <BlogAddition token={this.props.token} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardCounter;\r\n","import React, { Component } from \"react\";\r\nimport \"./loginstyler.css\";\r\nimport axios from \"axios\";\r\nimport Welcome from \"./Components/Welcome\";\r\nimport CardCounter from \"./Containters/CardCounter\";\r\nconst API = \"https://authorwrites-blog-api.herokuapp.com/login\";\r\nlet token = \"\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: \"\",\r\n    };\r\n  }\r\n\r\n  loginhandler = () => {\r\n    let enteredusername =\r\n      document.activeElement.parentElement.childNodes[1].value;\r\n    let enteredpassword =\r\n      document.activeElement.parentElement.childNodes[3].value;\r\n    axios\r\n      .post(API, {\r\n        email: enteredusername,\r\n        password: enteredpassword,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          token = res.data.token;\r\n          this.setState({ token: res.data.token });\r\n        } else {\r\n          alert(\"Wrong mail or password has been entered\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Wrong email or password\");\r\n      });\r\n    this.setState({ token: token });\r\n  };\r\n  render() {\r\n    if (this.state.token === \"\") {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"Welcome2\">\r\n            <h1>Author writes welcomes you</h1>\r\n            <form>\r\n              <div className=\"container\">\r\n                <label htmlFor=\"uname\">\r\n                  <b>Username</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Username\"\r\n                  name=\"uname\"\r\n                  required\r\n                />\r\n\r\n                <label htmlFor=\"psw\">\r\n                  <b>Password</b>\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  name=\"psw\"\r\n                  required\r\n                />\r\n\r\n                <button type=\"button\" onClick={this.loginhandler}>\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <div className=\"container\">\r\n                <button type=\"button\" className=\"cancelbtn\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {/*<View token={this.state.token} />*/}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Welcome token={this.state.token} />\r\n          <CardCounter token={this.state.token} />)\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./login\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Login />\n      {/*<Welcome />\n      {/*<OptionCards />}\n      <CardCounter />*/}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}